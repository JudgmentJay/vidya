@use '../../scss/variables.scss' as *;
@use '../../scss/themes.scss' as *;

.box {
	margin-bottom: $gapSizeA;
	padding: $gapSizeA 0 calc(#{$gapSizeA} - #{$itemPaddingA});

	background: rgba(255, 255, 255, 0.6);
	box-shadow: 0 0 15px rgba(0, 0, 0, 0.25);

	&:last-of-type {
		margin-bottom: 0;
	}

	&--nav {
		padding: 0;
	}

	&--stats {
		padding: $gapSizeA 0;
	}

	& > p {
		padding: 0 $gapSizeA $itemPaddingA;

		font-size: $fontSizeASm;

		cursor: default;
	}

	@each $theme, $attribute in $themes {
		&--#{$theme} {
			border: 2px solid #{map-get($attribute, 'accent2')};
		}
	}
}

@media only screen and (min-width: 1000px) {
	.box {
		background: rgba(255, 255, 255, 0.5);
		backdrop-filter: blur(3px);

		& > p {
			font-size: $fontSizeBSm;
		}
	}
}

@media only screen and (min-width: 1400px) {
	.box {
		overflow-x: hidden;
		overflow-y: auto;

		scrollbar-width: thin;

		& > p {
			font-size: $fontSizeASm;
		}

		@each $theme, $attribute in $themes {
			&--#{$theme} {
				border: 2px solid #{map-get($attribute, 'accent1')};
				scrollbar-color: map-get($attribute, 'accent1') darkgrey;

				&::-webkit-scrollbar-thumb {
					background-color: map-get($attribute, 'accent1');
				}

				&:hover {
					border: 2px solid #{map-get($attribute, 'accent2')};
					scrollbar-color: map-get($attribute, 'accent2') darkgrey;

					&::-webkit-scrollbar-thumb {
						background-color: map-get($attribute, 'accent2'); 
					}
				}
			}
		}
	}
}

@media only screen and (min-width: 2500px) {
	.box {
		margin-bottom: $gapSizeB;
		padding: $gapSizeB 0 calc(#{$gapSizeB} - #{$itemPaddingA});

		&--nav {
			padding: 0;
		}

		&--stats {
			padding: $gapSizeB 0;
		}

		& > p {
			padding: 0 $gapSizeB $itemPaddingA;

			font-size: $fontSizeBSm;
		}
	}
}

@media only screen and (min-width: 3500px) {
	.box {
		padding: $gapSizeB 0 calc(#{$gapSizeB} - #{$itemPaddingC});

		&--nav {
			padding: 0;
		}

		&--stats {
			padding: $gapSizeB 0;
		}

		& > p {
			padding: 0 $gapSizeB $itemPaddingC;

			font-size: $fontSizeCSm;
		}
	}
}
