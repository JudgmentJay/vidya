@use '../../css/variables.scss' as *;
@use '../../css/themes.scss' as *;

.modal {
	position: fixed;
	width: 100%;
	height: 100%;
	z-index: 2;

	cursor: default;

	@each $theme, $attribute in $themes {
		&--#{$theme} {
			&::-webkit-scrollbar-thumb {
				background-color: map-get($attribute, 'accent2'); 
			}
		}
	}
}

.content {
	position: fixed;
	top: $gapSizeA;
	left: $gapSizeA;
	z-index: 3;

	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	width: calc(100% - #{$gapSizeA * 2});
	height: calc(100% - #{$gapSizeA * 2});
	padding: $gapSizeA;
	overflow-x: hidden;
	overflow-y: auto;

	font-weight: 600;

	background: rgba(255, 255, 255, 0.65);
	box-shadow: 0 0 35px rgba(0, 0, 0, 0.75);

	@each $theme, $attribute in $themes {
		&--#{$theme} {
			border: 2px solid map-get($attribute, 'accent2');
		}
	}
}

.close {
	position: absolute;
	top: $gapSizeA;
	right: $gapSizeA;

	width: 15px;
	height: 15px;

	cursor: pointer;

	@each $theme, $attribute in $themes {
		&--#{$theme} {
			fill: map-get($attribute, 'fontColor');
		}
	}
}

.overlay {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1;

	background: rgba(0, 0, 0, 0.85);
}

@media only screen and (min-width: 1000px) {
	.content {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		display: block;
		width: 750px;
		height: auto;
		max-height: calc(100% - #{$gapSizeA * 2});
		padding: $gapSizeA * 2;
	}

	.close {
		display: none;
	}
}

@media only screen and (min-width: 2500px) {
	.content {
		max-height: calc(100% - #{$gapSizeB * 2});
	}
}

@media only screen and (min-width: 3500px) {
	.content {
		width: 1250px;
	}
}
